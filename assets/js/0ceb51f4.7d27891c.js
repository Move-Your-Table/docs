"use strict";(self.webpackChunkmove_your_table=self.webpackChunkmove_your_table||[]).push([[3103],{3905:function(t,e,a){a.d(e,{Zo:function(){return m},kt:function(){return k}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),d=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),u=d(a),k=r,N=u["".concat(p,".").concat(k)]||u[k]||s[k]||l;return a?n.createElement(N,i(i({ref:e},m),{},{components:a})):n.createElement(N,i({ref:e},m))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7497:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return m},default:function(){return u}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],o={sidebar_position:2},p="Getting started",d={unversionedId:"deployments/microservices/back-end/getting-started",id:"deployments/microservices/back-end/getting-started",isDocsHomePage:!1,title:"Getting started",description:"Setup",source:"@site/docs/deployments/microservices/back-end/getting-started.mdx",sourceDirName:"deployments/microservices/back-end",slug:"/deployments/microservices/back-end/getting-started",permalink:"/docs/deployments/microservices/back-end/getting-started",editUrl:"https://github.com/Move-Your-Table/docs/tree/main/docs/deployments/microservices/back-end/getting-started.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/deployments/microservices/back-end/index"},next:{title:"Going live",permalink:"/docs/deployments/microservices/back-end/going-live"}},m=[{value:"Setup",id:"setup",children:[{value:"Requirements",id:"requirements",children:[],level:3},{value:"Getting started",id:"getting-started-1",children:[{value:"Adding other services",id:"adding-other-services",children:[],level:4}],level:3}],level:2},{value:"Available <code>start</code> commands",id:"available-start-commands",children:[],level:2},{value:"<code>.env</code> configuration",id:"env-configuration",children:[],level:2}],s={toc:m};function u(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"getting-started"},"Getting started"),(0,l.kt)("h2",{id:"setup"},"Setup"),(0,l.kt)("h3",{id:"requirements"},"Requirements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.docker.com/get-started"},"Docker (Desktop)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.JS LTS")," & NPM")),(0,l.kt)("h3",{id:"getting-started-1"},"Getting started"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Copy the ",(0,l.kt)("inlineCode",{parentName:"p"},".env.example")," file, rename it ",(0,l.kt)("inlineCode",{parentName:"p"},".env")," and configure it, as described in the ",(0,l.kt)("a",{parentName:"p",href:"#env-configuration"},(0,l.kt)("inlineCode",{parentName:"a"},".env")," configuration section"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Install the needed packages"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn install\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"In the root of the directory, use the following command:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"```bash\n# If you want to run everything in the container\n$ yarn start:container:dev\n\n# If you want to run the source code offline\n$ yarn start:local:dev\n```\n")),(0,l.kt)("p",{parentName:"li"},"\u2705 Done! Your application should be configured & up and running. Start developing!"))),(0,l.kt)("h4",{id:"adding-other-services"},"Adding other services"),(0,l.kt)("p",null,"Because ",(0,l.kt)("a",{parentName:"p",href:"https://git.ti.howest.be/TI/2021-2022/s5/trending-topics/projects/hybrid-work1/gateway"},"Gateway"),", ",(0,l.kt)("a",{parentName:"p",href:"https://git.ti.howest.be/TI/2021-2022/s5/trending-topics/projects/hybrid-work1/automateapi"},"Automation API")," and ",(0,l.kt)("a",{parentName:"p",href:"https://git.ti.howest.be/TI/2021-2022/s5/trending-topics/projects/hybrid-work1/back-end"},"Back-End")," share the same custom network, you can build these and get the production server up & running."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"For ",(0,l.kt)("a",{parentName:"li",href:"https://git.ti.howest.be/TI/2021-2022/s5/trending-topics/projects/hybrid-work1/automateapi"},"Automation API"),", clone the project, navigate to the root of the project and perform the following command:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker-compose up rust_prod -d\n"))),(0,l.kt)("li",{parentName:"ul"},"For ",(0,l.kt)("a",{parentName:"li",href:"https://git.ti.howest.be/TI/2021-2022/s5/trending-topics/projects/hybrid-work1/gateway"},"Gateway"),", clone the project, navigate to the root of the project and perform the following command:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn start:container:prod\n")))),(0,l.kt)("h2",{id:"available-start-commands"},"Available ",(0,l.kt)("inlineCode",{parentName:"h2"},"start")," commands"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Explication"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yarn run start")),(0,l.kt)("td",{parentName:"tr",align:null},"Starts a development server ",(0,l.kt)("strong",{parentName:"td"},"without")," any hot-reloading capabilities, ",(0,l.kt)("strong",{parentName:"td"},"without")," any of the necessary containers.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yarn run start:dev")),(0,l.kt)("td",{parentName:"tr",align:null},"Start a fully ",(0,l.kt)("strong",{parentName:"td"},"containerized")," development server ",(0,l.kt)("strong",{parentName:"td"},"with")," hot-reloading capabilities, ",(0,l.kt)("strong",{parentName:"td"},"without")," any of the necessary containers.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yarn run start:prod")),(0,l.kt)("td",{parentName:"tr",align:null},"Starts a production-ready server, ",(0,l.kt)("strong",{parentName:"td"},"without")," any of the necessary containers.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yarn run start:local")),(0,l.kt)("td",{parentName:"tr",align:null},"Start a development server without any hot-reloading capabilities, where ",(0,l.kt)("strong",{parentName:"td"},"the app is runned locally"),", but the needed containers are started.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"npm run start:local:dev")),(0,l.kt)("td",{parentName:"tr",align:null},"Start a development server ",(0,l.kt)("strong",{parentName:"td"},"with")," hot-reloading capabilities, where ",(0,l.kt)("strong",{parentName:"td"},"the app is runned locally"),", but the needed containers are started.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"npm run start:local:prod")),(0,l.kt)("td",{parentName:"tr",align:null},"Starts a production-ready server, where ",(0,l.kt)("strong",{parentName:"td"},"the app is runned locally"),", but the needed containers are started.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yarn run start:container:dev")),(0,l.kt)("td",{parentName:"tr",align:null},"Starts a containerized development server, ",(0,l.kt)("strong",{parentName:"td"},"with")," hot-reloading capabilities & necessary containers")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yarn run start:container:prod")),(0,l.kt)("td",{parentName:"tr",align:null},"Starts a containerized production server.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yarn run test")),(0,l.kt)("td",{parentName:"tr",align:null},"Runs all unit tests")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yarn run test:e2e")),(0,l.kt)("td",{parentName:"tr",align:null},"Runs all e2e tests")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yarn run test:cov")),(0,l.kt)("td",{parentName:"tr",align:null},"Runs all coverage tests")))),(0,l.kt)("h1",{id:"miscellaneous"},"Miscellaneous"),(0,l.kt)("h2",{id:"env-configuration"},(0,l.kt)("inlineCode",{parentName:"h2"},".env")," configuration"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\ud83d\udca1 An example ",(0,l.kt)("inlineCode",{parentName:"p"},".env")," is available! Copy ",(0,l.kt)("inlineCode",{parentName:"p"},".env.example")," and rename it to ",(0,l.kt)("inlineCode",{parentName:"p"},".env")," to get started.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Value explanation"),(0,l.kt)("th",{parentName:"tr",align:null},"Value example"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"COMPOSE_PROJECT_NAME"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the compose stack"),(0,l.kt)("td",{parentName:"tr",align:null},'"MYT Back-end Server"')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"NESTJS_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The port used to reach the application from external networks"),(0,l.kt)("td",{parentName:"tr",align:null},"3000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MONGO_ENDPOINT"),(0,l.kt)("td",{parentName:"tr",align:null},"The endpoint used by the application to reach the MongoDB"),(0,l.kt)("td",{parentName:"tr",align:null},"localhost")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MONGO_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The port used by the application to reach the MongoDB"),(0,l.kt)("td",{parentName:"tr",align:null},"27017")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MONGO_USERNAME"),(0,l.kt)("td",{parentName:"tr",align:null},"The username that the app uses to access the database"),(0,l.kt)("td",{parentName:"tr",align:null},"root")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MONGO_PASSWORD"),(0,l.kt)("td",{parentName:"tr",align:null},"The username that the app uses to access the database"),(0,l.kt)("td",{parentName:"tr",align:null},"zXnpa&VDpoj6RU")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MONGO_DB"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the database the app uses"),(0,l.kt)("td",{parentName:"tr",align:null},"MYT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AUTOMATE_ENDPOINT"),(0,l.kt)("td",{parentName:"tr",align:null},"The endpoint used by the application to reach the automate server"),(0,l.kt)("td",{parentName:"tr",align:null},"localhost")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AUTOMATE_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The port used by the application to reach the automate server"),(0,l.kt)("td",{parentName:"tr",align:null},"3000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GATEWAY_ENDPOINT"),(0,l.kt)("td",{parentName:"tr",align:null},"The endpoint used by the application to reach the gateway server"),(0,l.kt)("td",{parentName:"tr",align:null},"localhost")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GATEWAY_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The port used by the application to reach the gateway server"),(0,l.kt)("td",{parentName:"tr",align:null},"3000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RABBITMQ_ENDPOINT"),(0,l.kt)("td",{parentName:"tr",align:null},"The address used by the app to reach Rabbit MQ"),(0,l.kt)("td",{parentName:"tr",align:null},"localhost")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RABBITMQ_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The port used by the app to communicate with Rabbit MQ"),(0,l.kt)("td",{parentName:"tr",align:null},"5672")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"NESTJS_EXPOSE_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The port the app is exposed ",(0,l.kt)("strong",{parentName:"td"},"through the container")),(0,l.kt)("td",{parentName:"tr",align:null},"3030")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_MONGO_ROOT_USERNAME"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the root user of the MongoDB container"),(0,l.kt)("td",{parentName:"tr",align:null},"root")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_MONGO_ROOT_PASSWORD"),(0,l.kt)("td",{parentName:"tr",align:null},"The password of the root user of the MongoDB container"),(0,l.kt)("td",{parentName:"tr",align:null},"zXnpa&VDpoj6RU")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_MONGO_INIT_DB"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the database within the MongoDB Container"),(0,l.kt)("td",{parentName:"tr",align:null},"MYT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_MONGO_EXTERNAL_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The external port used to reach the MongoDB container from a ",(0,l.kt)("strong",{parentName:"td"},"external")," network"),(0,l.kt)("td",{parentName:"tr",align:null},"27017")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_MONGO_ENDPOINT"),(0,l.kt)("td",{parentName:"tr",align:null},"The endpoint used by the application to reach the database ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"localhost")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_MONGO_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The port used by the application to reach the database ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"27017")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_MONGO_USERNAME"),(0,l.kt)("td",{parentName:"tr",align:null},"The username that the app uses to access the database ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"root")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_MONGO_PASSWORD"),(0,l.kt)("td",{parentName:"tr",align:null},"The username that the app uses to access the database ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"zXnpa&VDpoj6RU")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_MONGO_DB"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the database the app uses ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"MYT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_AUTOMATE_ENDPOINT"),(0,l.kt)("td",{parentName:"tr",align:null},"The endpoint used by the application to reach the automate server ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"localhost")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_AUTOMATE_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The port used by the application to reach the automate server ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"3000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_GATEWAY_ENDPOINT"),(0,l.kt)("td",{parentName:"tr",align:null},"The endpoint used by the application to reach the gateway server ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"localhost")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_GATEWAY_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The port used by the application to reach the gateway server ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"3000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_RABBITMQ_ENDPOINT"),(0,l.kt)("td",{parentName:"tr",align:null},"The address used by the app to reach Rabbit MQ ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"localhost")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_RABBITMQ_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The port used by the app to communicate with Rabbit MQ ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"5672")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_RABBITMQ_EXTERNAL_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The port used ",(0,l.kt)("strong",{parentName:"td"},"outside")," the container network to communicate with Rabbit MQ ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"5672")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOCKER_RABBITMQ_EXTERNAL_MANAGEMENT_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"The port used ",(0,l.kt)("strong",{parentName:"td"},"outside")," the container network to communicate with Rabbit MQ ",(0,l.kt)("strong",{parentName:"td"},"within the container")),(0,l.kt)("td",{parentName:"tr",align:null},"15672")))))}u.isMDXComponent=!0}}]);