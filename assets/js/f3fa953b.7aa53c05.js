"use strict";(self.webpackChunkmove_your_table=self.webpackChunkmove_your_table||[]).push([[8297],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return c}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=u(n),c=a,k=m["".concat(p,".").concat(c)]||m[c]||d[c]||o;return n?r.createElement(k,l(l({ref:t},s),{},{components:n})):r.createElement(k,l({ref:t},s))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},720:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return s},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={sidebar_position:2},p="Getting started",u={unversionedId:"deployments/microservices/automate-server/getting-started",id:"deployments/microservices/automate-server/getting-started",isDocsHomePage:!1,title:"Getting started",description:"Setup",source:"@site/docs/deployments/microservices/automate-server/getting-started.mdx",sourceDirName:"deployments/microservices/automate-server",slug:"/deployments/microservices/automate-server/getting-started",permalink:"/docs/deployments/microservices/automate-server/getting-started",editUrl:"https://github.com/Move-Your-Table/docs/tree/main/docs/deployments/microservices/automate-server/getting-started.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/deployments/microservices/automate-server/index"},next:{title:"Going live",permalink:"/docs/deployments/microservices/automate-server/going-live"}},s=[{value:"Setup",id:"setup",children:[{value:"Requirements",id:"requirements",children:[],level:3}],level:2},{value:"Setup",id:"setup-1",children:[{value:"Development",id:"development",children:[{value:"Adding other services",id:"adding-other-services",children:[],level:4}],level:3}],level:2},{value:"Miscellaneous",id:"miscellaneous",children:[{value:"<code>.env</code> configuration",id:"env-configuration",children:[],level:3}],level:2}],d={toc:s};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting started"),(0,o.kt)("h2",{id:"setup"},"Setup"),(0,o.kt)("h3",{id:"requirements"},"Requirements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.rust-lang.org/tools/install"},"Rust"),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},"\ud83d\udca1 While this is listed within the requirements, you'll only need this if you choose to run your code locally. Docker takes care of Rust!"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.docker.com/get-started"},"Docker Desktop"))),(0,o.kt)("h2",{id:"setup-1"},"Setup"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u203c When within staging & production, the image will need to be rebuild when code changes happen.\nFor this, add the ",(0,o.kt)("inlineCode",{parentName:"p"},"--build")," argument behind the given ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose")," commands")),(0,o.kt)("h3",{id:"development"},"Development"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Clone the project to your local machine using your favorite CLI & ",(0,o.kt)("inlineCode",{parentName:"li"},"git clone")),(0,o.kt)("li",{parentName:"ol"},"Copy the ",(0,o.kt)("inlineCode",{parentName:"li"},".env.example"),", rename it to ",(0,o.kt)("inlineCode",{parentName:"li"},".env")," and fill it in according to the ",(0,o.kt)("a",{parentName:"li",href:"#env-configuration"},(0,o.kt)("inlineCode",{parentName:"a"},".env")," configuration section"),"."),(0,o.kt)("li",{parentName:"ol"},"Run the actual project")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If you want to develop ",(0,o.kt)("strong",{parentName:"li"},"within")," the container, you'll need to use the following command:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker-compose --profile dev-container up\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\ud83d\udea8 The first build might take a while. Rust takes a while to build.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If you want to run your build locally, you'll need to use the following command:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker-compose --profile dev-local up\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"When you want to get the containers offline, enter the following command:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# If you were developing locally\n$ docker-compose --profile dev-local down\n\n# If you were developing within containers\n$ docker-compose --profile dev-container down\n")),(0,o.kt)("h4",{id:"adding-other-services"},"Adding other services"),(0,o.kt)("p",null,"Because ",(0,o.kt)("a",{parentName:"p",href:"https://git.ti.howest.be/TI/2021-2022/s5/trending-topics/projects/hybrid-work1/gateway"},"Gateway"),", ",(0,o.kt)("a",{parentName:"p",href:"https://git.ti.howest.be/TI/2021-2022/s5/trending-topics/projects/hybrid-work1/automateapi"},"Automation API")," and ",(0,o.kt)("a",{parentName:"p",href:"https://git.ti.howest.be/TI/2021-2022/s5/trending-topics/projects/hybrid-work1/back-end"},"Back-End")," share the same custom network, you can build these and get the production server up & running."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"For ",(0,o.kt)("a",{parentName:"p",href:"https://git.ti.howest.be/TI/2021-2022/s5/trending-topics/projects/hybrid-work1/back-end"},"Back-End"),", clone the project, navigate to the root of the project and perform the following command:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker-compose up -d nestjs_dev\n$ docker-compose up -d mongodb_dev\n")),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f Currently, the GraphQL implementation in the production container seems to be broken, so we suggest using the development version for now."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"For ",(0,o.kt)("a",{parentName:"p",href:"https://git.ti.howest.be/TI/2021-2022/s5/trending-topics/projects/hybrid-work1/gateway"},"Gateway"),", clone the project, navigate to the root of the project and perform the following command:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker-compose up tsed_prod -d\n")))),(0,o.kt)("h2",{id:"miscellaneous"},"Miscellaneous"),(0,o.kt)("h3",{id:"env-configuration"},(0,o.kt)("inlineCode",{parentName:"h3"},".env")," configuration"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\ud83d\udca1 There's a ",(0,o.kt)("inlineCode",{parentName:"p"},".env.example")," file available to get you started!")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Key"),(0,o.kt)("th",{parentName:"tr",align:null},"Value explanation"),(0,o.kt)("th",{parentName:"tr",align:null},"Value example"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"COMPOSE_PROJECT_NAME"),(0,o.kt)("td",{parentName:"tr",align:null},"Name of the compose stack"),(0,o.kt)("td",{parentName:"tr",align:null},"MYT Automate Server")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"AUTOMATE_URL"),(0,o.kt)("td",{parentName:"tr",align:null},"The url used ",(0,o.kt)("strong",{parentName:"td"},"outside")," the container network to communicate with Power Automate"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://prod-39.westeurope.logic.azure.com:443/workflows/"},"https://prod-39.westeurope.logic.azure.com:443/workflows/"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"RABBITMQ_ENDPOINT"),(0,o.kt)("td",{parentName:"tr",align:null},"The address used ",(0,o.kt)("strong",{parentName:"td"},"within")," the app to reach Rabbit MQ"),(0,o.kt)("td",{parentName:"tr",align:null},"localhost")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"RABBITMQ_PORT"),(0,o.kt)("td",{parentName:"tr",align:null},"The port used ",(0,o.kt)("strong",{parentName:"td"},"within")," the app to communicate with Rabbit MQ"),(0,o.kt)("td",{parentName:"tr",align:null},"5672")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"RABBITMQ_QUEUE"),(0,o.kt)("td",{parentName:"tr",align:null},"The name of the queue ",(0,o.kt)("strong",{parentName:"td"},"within")," the app to listen to from Rabbit MQ"),(0,o.kt)("td",{parentName:"tr",align:null},"bookings")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"RABBITMQ_USERNAME"),(0,o.kt)("td",{parentName:"tr",align:null},"The username ",(0,o.kt)("strong",{parentName:"td"},"within")," the app to listen to from Rabbit MQ"),(0,o.kt)("td",{parentName:"tr",align:null},"guest")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"RABBITMQ_PASSWORD"),(0,o.kt)("td",{parentName:"tr",align:null},"The password ",(0,o.kt)("strong",{parentName:"td"},"within")," the app to listen to from Rabbit MQ"),(0,o.kt)("td",{parentName:"tr",align:null},"guest")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"DOCKER_RABBITMQ_ENDPOINT"),(0,o.kt)("td",{parentName:"tr",align:null},"The address used to reach RabbitMQ ",(0,o.kt)("strong",{parentName:"td"},"inside")," the container"),(0,o.kt)("td",{parentName:"tr",align:null},"localhost")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"DOCKER_RABBITMQ_PORT"),(0,o.kt)("td",{parentName:"tr",align:null},"The port used to communicate with Rabbit MQ ",(0,o.kt)("strong",{parentName:"td"},"inside")," the container"),(0,o.kt)("td",{parentName:"tr",align:null},"5672")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"DOCKER_RABBITMQ_EXTERNAL_PORT"),(0,o.kt)("td",{parentName:"tr",align:null},"The port used ",(0,o.kt)("strong",{parentName:"td"},"outside")," the container network to communicate with Rabbit MQ"),(0,o.kt)("td",{parentName:"tr",align:null},"5672")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"DOCKER_RABBITMQ_EXTERNAL_MANAGEMENT_PORT"),(0,o.kt)("td",{parentName:"tr",align:null},"The port used ",(0,o.kt)("strong",{parentName:"td"},"outside")," the container network to communicate with Rabbit MQ's Manager interface"),(0,o.kt)("td",{parentName:"tr",align:null},"15672")))))}m.isMDXComponent=!0}}]);